(()=>{"use strict";function h(s,e,t,n,r,o,i){try{var c=s[o](i),l=c.value}catch(u){return void t(u)}c.done?e(l):Promise.resolve(l).then(n,r)}function a(s){return function(){var e=this,t=arguments;return new Promise(function(n,r){var o=s.apply(e,t);function i(l){h(o,n,r,i,c,"next",l)}function c(l){h(o,n,r,i,c,"throw",l)}i(void 0)})}}class y{constructor(e){this.libs=e,this.pyodidePromise=this.prepareEnv()}prepareEnv(){var e=this;return a(function*(){let t=yield loadPyodide();for(const n of e.libs)yield t.unpackArchive(n,"wheel");return t})()}select(e,t){var n=this;return a(function*(){let r,o;try{let i=yield n.pyodidePromise;void 0!==n.pyconsole&&(yield n.close()),r=i.globals.get("dict")();let c=i.toPy(t);r.update(c),c.destroy(),yield i.loadPackagesFromImports(e),i.runPython(e,{globals:r}),o=r.get("instance");let l=o.console.copy();l.globals.update(r),l.stdout_callback=u=>y.stdCallback(u.trim(),!1),l.stderr_callback=u=>y.stdCallback(u.trim(),!0),n.pyconsole=l}finally{r?.destroy(),o?.destroy()}})()}run(e,t){var n=this;return a(function*(){if(void 0===n.pyconsole)throw new Error("No script selected");yield n.setParams(t);const r=yield n.pyconsole.push(e);if((yield n.pyodidePromise).isPyProxy(r)){let i=r.toJs({create_pyproxies:!1,dict_converter:Object.fromEntries});return r.destroy(),i}return yield n.clearParams(t),r})()}setParams(e){var t=this;return a(function*(){let r=(yield t.pyodidePromise).toPy(e),o=t.pyconsole.globals.get("instance").__dict__;o.update(r),r.destroy(),console.log(o.keys().__str__())})()}clearParams(e){var t=this;return a(function*(){let n=yield t.pyodidePromise,r=t.pyconsole.globals.get("instance").__dict__;for(let o of Object.keys(e)){let i=n.toPy(o);r.pop(i)}console.log(r.keys().__str__())})()}close(){var e=this;return a(function*(){if(void 0===e.pyconsole)throw new Error("No script selected");e.pyconsole.destroy()})()}static stdCallback(e,t){e&&postMessage({action:"output",content:e,isError:t})}}importScripts("https://cdn.jsdelivr.net/pyodide/v0.20.0/full/pyodide.js");let p,d=!1;function f(){return(f=a(function*(s){p=new y(s.libs)})).apply(this,arguments)}addEventListener("message",({data:s})=>{if(d)throw new Error("Worker is already busy");try{let e=function m(s){if(void 0===p){if("init"!==s.action)throw new Error("Worker not initialized");return function _(s){return f.apply(this,arguments)}(s)}switch(s.action){case"select":return p.select(s.code,s.data);case"run":return p.run(s.expression,s.params)}throw new RangeError}(s);d=!0,e.then(t=>{(function g(s){postMessage(s)})({action:"result",content:t}),d=!1},t=>{throw d=!1,t})}catch(e){throw d=!1,e}})})();